{
    "Mappings": {
        "AWSAMIRegion": {
            "ap-northeast-1": {
                "NATAMI": "ami-17944271"
            },
            "ap-northeast-2": {
                "NATAMI": "ami-61e03a0f"
            },
            "ap-south-1": {
                "NATAMI": "ami-6dc38202"
            },
            "ap-southeast-1": {
                "NATAMI": "ami-0597ea66"
            },
            "ap-southeast-2": {
                "NATAMI": "ami-2c37d74e"
            },
            "ca-central-1": {
                "NATAMI": "ami-f055ec94"
            },
            "eu-central-1": {
                "NATAMI": "ami-3cec5e53"
            },
            "eu-west-1": {
                "NATAMI": "ami-38d20741"
            },
            "eu-west-2": {
                "NATAMI": "ami-e07d6f84"
            },
            "sa-east-1": {
                "NATAMI": "ami-6a354a06"
            },
            "us-east-1": {
                "NATAMI": "ami-b419e7ce"
            },
            "us-east-2": {
                "NATAMI": "ami-8c002de9"
            },
            "us-west-1": {
                "NATAMI": "ami-36ebdb56"
            },
            "us-west-2": {
                "NATAMI": "ami-d08b70a8"
            }
        }
    },
    "Parameters": {
        "AutoscalingSecurityGroup": {
            "Description": "Security group for NAT instances & LB. Recommended inbound open for TCP 80, 443",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "CloudWatchScalingWindow": {
            "AllowedValues": [
                60,
                300,
                900,
                3600
            ],
            "Default": 300,
            "Description": "How long in seconds to constitute a Cloudwatch Period",
            "Type": "Number"
        },
        "DeployBucket": {
            "Default": "storreduce-production-cf-templates",
            "Description": "The S3 bucket with the CloudFormation scripts and assets.",
            "Type": "String"
        },
        "DesiredCapacity": {
            "Default": 1,
            "Description": "Initial number of NAT instances",
            "Type": "Number"
        },
        "KeyPairName": {
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair.",
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "LBName": {
            "Default": "NAT-LB",
            "Description": "Base name tag for the load balancer",
            "Type": "String"
        },
        "MaxSize": {
            "Default": 10,
            "Description": "Max number of NAT instances",
            "Type": "Number"
        },
        "MinSize": {
            "Default": 1,
            "Description": "Min number of NAT instances",
            "Type": "Number"
        },
        "NATInstanceNames": {
            "Default": "NAT-instance",
            "Description": "Base name tag to give the NAT instances",
            "Type": "String"
        },
        "NATInstanceType": {
            "ConstraintDescription": "must be a valid EC2 instance type.",
            "Default": "m4.large",
            "Description": "EC2 instance type for NAT autoscaling group. Recommend m4.large instance type. Change the CloudWatch scaling parameters if you change the instance type.",
            "Type": "String"
        },
        "NATNamespace": {
            "Default": "NAT-namespace",
            "Description": "Base name of the CloudWatch namespace to group metrics in",
            "Type": "String"
        },
        "ScaleInAverageThreshold": {
            "Default": 10000,
            "Description": "In KB/s",
            "Type": "Number"
        },
        "ScaleInConsecutivePeriod": {
            "Default": 5,
            "Description": "Scale in if the CloudWatch metric falls below ScaleInAverageThreshold for this number of periods consecutively",
            "Type": "Number"
        },
        "ScaleOutAverageThreshold": {
            "Default": 25000,
            "Description": "In KiB/s",
            "Type": "Number"
        },
        "ScaleOutConsecutivePeriod": {
            "Default": 1,
            "Description": "Scale out if the CloudWatch metric exceeds ScaleOutAverageThreshold for this number of periods consecutively",
            "Type": "Number"
        },
        "ScalingActivityCoolOff": {
            "Default": 150,
            "Description": "How long (in seconds) to cool off before performing more scaling",
            "Type": "Number"
        },
        "SubnetsWithS3Endpoint": {
            "Description": "The private subnets with a configured S3 VPC endpoint. Recommended to be spread across multiple AZ's.",
            "Type": "List<AWS::EC2::Subnet::Id>"
        },
        "VPCID": {
            "Description": "The VPC ID you wish to deploy in",
            "Type": "AWS::EC2::VPC::Id"
        }
    },
    "Resources": {
        "AlarmScaleInPolicy": {
            "Properties": {
                "AlarmActions": [
                    {
                        "Ref": "ScaleInPolicy"
                    }
                ],
                "AlarmDescription": {
                    "Fn::Join": [
                        "",
                        [
                            "Scale in if average traffic < ",
                            {
                                "Ref": "ScaleInAverageThreshold"
                            },
                            " KB/s for ",
                            {
                                "Ref": "ScaleInConsecutivePeriod"
                            },
                            " periods of ",
                            {
                                "Ref": "CloudWatchScalingWindow"
                            },
                            " seconds"
                        ]
                    ]
                },
                "ComparisonOperator": "LessThanThreshold",
                "Dimensions": [
                    {
                        "Name": "StackName",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ],
                "EvaluationPeriods": {
                    "Ref": "ScaleInConsecutivePeriod"
                },
                "MetricName": "TotalKbytesPerSecond",
                "Namespace": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-",
                            {
                                "Ref": "NATNamespace"
                            }
                        ]
                    ]
                },
                "Period": {
                    "Ref": "CloudWatchScalingWindow"
                },
                "Statistic": "Average",
                "Threshold": {
                    "Ref": "ScaleInAverageThreshold"
                }
            },
            "Type": "AWS::CloudWatch::Alarm"
        },
        "AlarmScaleOutPolicy": {
            "Properties": {
                "AlarmActions": [
                    {
                        "Ref": "ScaleOutPolicy"
                    }
                ],
                "AlarmDescription": {
                    "Fn::Join": [
                        "",
                        [
                            "Scale out if average traffic > ",
                            {
                                "Ref": "ScaleOutAverageThreshold"
                            },
                            " KB/s for ",
                            {
                                "Ref": "ScaleOutConsecutivePeriod"
                            },
                            " periods of ",
                            {
                                "Ref": "CloudWatchScalingWindow"
                            },
                            " seconds"
                        ]
                    ]
                },
                "ComparisonOperator": "GreaterThanThreshold",
                "Dimensions": [
                    {
                        "Name": "StackName",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ],
                "EvaluationPeriods": {
                    "Ref": "ScaleOutConsecutivePeriod"
                },
                "MetricName": "TotalKbytesPerSecond",
                "Namespace": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-",
                            {
                                "Ref": "NATNamespace"
                            }
                        ]
                    ]
                },
                "Period": {
                    "Ref": "CloudWatchScalingWindow"
                },
                "Statistic": "Average",
                "Threshold": {
                    "Ref": "ScaleOutAverageThreshold"
                }
            },
            "Type": "AWS::CloudWatch::Alarm"
        },
        "AutoscalingGroup": {
            "Properties": {
                "Cooldown": {
                    "Ref": "ScalingActivityCoolOff"
                },
                "DesiredCapacity": {
                    "Ref": "DesiredCapacity"
                },
                "HealthCheckGracePeriod": 300,
                "HealthCheckType": "ELB",
                "LaunchConfigurationName": {
                    "Ref": "LaunchConfig"
                },
                "MaxSize": {
                    "Ref": "MaxSize"
                },
                "MinSize": {
                    "Ref": "MinSize"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "PropagateAtLaunch": true,
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "-",
                                    {
                                        "Ref": "NATInstanceNames"
                                    }
                                ]
                            ]
                        }
                    }
                ],
                "TargetGroupARNs": [
                    {
                        "Ref": "NATLBTargetGroup80"
                    },
                    {
                        "Ref": "NATLBTargetGroup443"
                    }
                ],
                "VPCZoneIdentifier": {
                    "Ref": "SubnetsWithS3Endpoint"
                }
            },
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "UpdatePolicy": {
                "AutoScalingReplacingUpdate": {
                    "WillReplace": "true"
                },
                "AutoScalingRollingUpdate": {
                    "MaxBatchSize": "1",
                    "MinInstancesInService": "1",
                    "PauseTime": "PT5M",
                    "WaitOnResourceSignals": "true"
                }
            }
        },
        "EC2InstanceProfile": {
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "EC2Role"
                    }
                ]
            },
            "Type": "AWS::IAM::InstanceProfile"
        },
        "EC2Role": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "s3:GetObject"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": {
                                        "Fn::Sub": "arn:aws:s3:::${DeployBucket}/*"
                                    }
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "s3-policy"
                    },
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "cloudwatch:PutMetricData"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "root"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "LaunchConfig": {
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "DeployUserAuth": {
                        "buckets": [
                            {
                                "Ref": "DeployBucket"
                            }
                        ],
                        "roleName": {
                            "Ref": "EC2Role"
                        },
                        "type": "S3"
                    }
                },
                "AWS::CloudFormation::Init": {
                    "config": {
                        "commands": {
                            "init": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "/home/ec2-user/configure-s3-nat.sh && ",
                                            "/home/ec2-user/init-cron.sh \"",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "\" \"",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "-",
                                            {
                                                "Ref": "NATNamespace"
                                            },
                                            "\" && ",
                                            "/home/ec2-user/test-s3-nat.sh"
                                        ]
                                    ]
                                }
                            }
                        },
                        "files": {
                            "/home/ec2-user/configure-s3-nat.sh": {
                                "authentication": "DeployUserAuth",
                                "group": "root",
                                "mode": "000550",
                                "owner": "root",
                                "source": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "http://",
                                            {
                                                "Ref": "DeployBucket"
                                            },
                                            ".s3.",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ".amazonaws.com/scripts/configure-s3-nat.sh"
                                        ]
                                    ]
                                }
                            },
                            "/home/ec2-user/init-cron.sh": {
                                "authentication": "DeployUserAuth",
                                "group": "root",
                                "mode": "000550",
                                "owner": "root",
                                "source": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "http://",
                                            {
                                                "Ref": "DeployBucket"
                                            },
                                            ".s3.",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ".amazonaws.com/scripts/init-cron.sh"
                                        ]
                                    ]
                                }
                            },
                            "/home/ec2-user/metrics.sh": {
                                "authentication": "DeployUserAuth",
                                "group": "root",
                                "mode": "000550",
                                "owner": "root",
                                "source": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "http://",
                                            {
                                                "Ref": "DeployBucket"
                                            },
                                            ".s3.",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ".amazonaws.com/scripts/metrics.sh"
                                        ]
                                    ]
                                }
                            },
                            "/home/ec2-user/nat-globals.sh": {
                                "authentication": "DeployUserAuth",
                                "group": "root",
                                "mode": "000550",
                                "owner": "root",
                                "source": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "http://",
                                            {
                                                "Ref": "DeployBucket"
                                            },
                                            ".s3.",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ".amazonaws.com/scripts/nat-globals.sh"
                                        ]
                                    ]
                                }
                            },
                            "/home/ec2-user/nat-lib.sh": {
                                "authentication": "DeployUserAuth",
                                "group": "root",
                                "mode": "000550",
                                "owner": "root",
                                "source": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "http://",
                                            {
                                                "Ref": "DeployBucket"
                                            },
                                            ".s3.",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ".amazonaws.com/scripts/nat-lib.sh"
                                        ]
                                    ]
                                }
                            },
                            "/home/ec2-user/s3-nat-watchdog.sh": {
                                "authentication": "DeployUserAuth",
                                "group": "root",
                                "mode": "000550",
                                "owner": "root",
                                "source": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "http://",
                                            {
                                                "Ref": "DeployBucket"
                                            },
                                            ".s3.",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ".amazonaws.com/scripts/s3-nat-watchdog.sh"
                                        ]
                                    ]
                                }
                            },
                            "/home/ec2-user/test-s3-nat.sh": {
                                "authentication": "DeployUserAuth",
                                "group": "root",
                                "mode": "000550",
                                "owner": "root",
                                "source": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "http://",
                                            {
                                                "Ref": "DeployBucket"
                                            },
                                            ".s3.",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ".amazonaws.com/scripts/test-s3-nat.sh"
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "IamInstanceProfile": {
                    "Ref": "EC2InstanceProfile"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegion",
                        {
                            "Ref": "AWS::Region"
                        },
                        "NATAMI"
                    ]
                },
                "InstanceMonitoring": "false",
                "InstanceType": {
                    "Ref": "NATInstanceType"
                },
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "SecurityGroups": [
                    {
                        "Ref": "AutoscalingSecurityGroup"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "\n        #!/bin/bash -xe\n        /opt/aws/bin/cfn-init -v ",
                                "    --resource LaunchConfig",
                                "    --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "    --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "cfn-signal -e $?",
                                "    --resource AutoscalingGroup",
                                "    --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "    --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration"
        },
        "NATLBTargetGroup443": {
            "Properties": {
                "HealthCheckIntervalSeconds": 10,
                "HealthyThresholdCount": 6,
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-",
                            {
                                "Ref": "LBName"
                            },
                            "-tgt443"
                        ]
                    ]
                },
                "Port": 443,
                "Protocol": "TCP",
                "UnhealthyThresholdCount": 6,
                "VpcId": {
                    "Ref": "VPCID"
                }
            },
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup"
        },
        "NATLBTargetGroup80": {
            "Properties": {
                "HealthCheckIntervalSeconds": 10,
                "HealthyThresholdCount": 6,
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-",
                            {
                                "Ref": "LBName"
                            },
                            "-tgt80"
                        ]
                    ]
                },
                "Port": 80,
                "Protocol": "TCP",
                "UnhealthyThresholdCount": 6,
                "VpcId": {
                    "Ref": "VPCID"
                }
            },
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup"
        },
        "NATLoadBalancer": {
            "Properties": {
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-",
                            {
                                "Ref": "LBName"
                            }
                        ]
                    ]
                },
                "Scheme": "internal",
                "Subnets": {
                    "Ref": "SubnetsWithS3Endpoint"
                },
                "Type": "network"
            },
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer"
        },
        "NATLoadBalancerListener443": {
            "Properties": {
                "DefaultActions": [
                    {
                        "TargetGroupArn": {
                            "Ref": "NATLBTargetGroup443"
                        },
                        "Type": "forward"
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "NATLoadBalancer"
                },
                "Port": 443,
                "Protocol": "TCP"
            },
            "Type": "AWS::ElasticLoadBalancingV2::Listener"
        },
        "NATLoadBalancerListener80": {
            "Properties": {
                "DefaultActions": [
                    {
                        "TargetGroupArn": {
                            "Ref": "NATLBTargetGroup80"
                        },
                        "Type": "forward"
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "NATLoadBalancer"
                },
                "Port": 80,
                "Protocol": "TCP"
            },
            "Type": "AWS::ElasticLoadBalancingV2::Listener"
        },
        "ScaleInPolicy": {
            "Properties": {
                "AdjustmentType": "ChangeInCapacity",
                "AutoScalingGroupName": {
                    "Ref": "AutoscalingGroup"
                },
                "Cooldown": 300,
                "ScalingAdjustment": -1
            },
            "Type": "AWS::AutoScaling::ScalingPolicy"
        },
        "ScaleOutPolicy": {
            "Properties": {
                "AdjustmentType": "ChangeInCapacity",
                "AutoScalingGroupName": {
                    "Ref": "AutoscalingGroup"
                },
                "Cooldown": 300,
                "ScalingAdjustment": 1
            },
            "Type": "AWS::AutoScaling::ScalingPolicy"
        }
    }
}
